// rename to ".boot0" to run at startup
E.enableWatchdog(10);

const _S = require("Storage");

if((new Date()).getFullYear() < 2020) {
    setTimeout(()=>{
      require("~setTime.js").setDtTz();
    }, 5*1000);
} else {
  let dz=Date();
  let m = dz.getMonth(), d=dz.getDate(), dow=dz.getDay();
  //if(m<2 || m>10) dz=-5;
  dz=-5;
  if(m>2 && m<10) dz=-4;
  if((m == 2) && (d-dow > 7)) dz=-4;
  if ((m == 10) && (d-dow <= 0)) dz=-4;
  E.setTimeZone(dz);
};

E.at = (timeStr, func) => {
  if(timeStr.indexOf("T") < 0) { timeStr = Date().toISOString().substring(0,11)+timeStr;}
  let delay = Math.floor((new Date(timeStr)).getTime() - (new Date()).getTime());
  if (delay < 0) delay += 24*60*60*1000;
  //print("thats in "+delay/1000);
  return(setTimeout(func, delay))
};

if(typeof(Graphics) == "function") {
  Graphics.prototype.rotatePoly = (pArr, a, xoff, yoff) => {
    let newArr = [];
    //let a = angle;// * pRad;
    for(let i=0; i<pArr.length ; i+= 2) {
      newArr[i] = Math.round(xoff + Math.cos(a)*pArr[i] + Math.sin(a)*pArr[i+1]);
      newArr[i+1] =  Math.round(yoff + Math.sin(a)*pArr[i] - Math.cos(a)*pArr[i+1]);
    }
    return newArr;
  };
}

eval(_S.read(process.env.BOARD+".js"));
